#!/bin/sh

#rootmnt is expected with the ROOT file system checked and mounted

if [ -z "${looproot}" ]; then
	#Nothing to be done
	return 0
fi

looppart=$(echo -ne "${looproot}" | cut -d":" -f2)
loopfile=$(echo -ne "${looproot}" | cut -d":" -f1)

#Check if the file is Actually there
if [ ! -f "${rootmnt}${loopfile}" ]; then
	panic "Loop file is NOT found!"
	return 1
fi

#
#modprobe loop

#make the rootmount 2 path
[ -d "${rootmnt}2" ] || mkdir -m 0700 "${rootmnt}2"

#move the parent mount to root mount 2 (/root2 for debian)
mount -n --move "${rootmnt}" "${rootmnt}2"

#Check if the parent fs is mounted as read only
#(This can happen if the system did not shutdown correctly)
if (cat /proc/mounts | grep "${rootmnt}2" | cut -d " " -f4 | grep -q "ro"); then
	#Remount root2 as rw
	#NOTE: this can result in data loss
	warn "Parent FS was not unmounted correctly last boot"
	mount -n -o remount,rw "${rootmnt}2"
fi

#Try to parse whats after loop

#if [ -z "$looppart" ]; then
if (echo -ne "${looproot}" | grep -q ":"); then
	#Disk image
	panic "Trying to mount ${loopfile} with partition ${looppart}, but it is not supported yet"
	return 1
fi

#NTFS-3g is needed for NTFS mounts
mount -n -t ext4,btrfs,vfat,exfat -o loop "${rootmnt}2${loopfile}" "${rootmnt}"
if [ $? -ne 0 ]; then
	#Mount failed
	mount -n -o remount,ro "${rootmnt}2"
	panic "mounting ${loopfile} failed!"
	return 1
fi

#Move the parent mount to /mnt on the new mounted root
mount -n --move ${rootmnt}2 ${rootmnt}/mnt

success "Loop root mounted successfully!"
sleep 2

return 0
